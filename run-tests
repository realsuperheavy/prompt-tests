#!/bin/bash
export TTY
# shopt -s nullglob # use for 'for' loops but not for 'ls', 'grep'

# git-repo-for-each-branch-do "https://github.com/semiosis/prompts/" "$MYGIT/semiosis/prompt-tests/run-tests"| v

test -d "prompts" || exit 1

cd prompts

for fp in *; do
    if ! { test -f "$fp" && pl "$fp" | grep -q -P '\.prompt$'; }; then
        continue
    fi

    echo "$fp" | udl | hls purple
    delim="Â¬"
    IFS="$delim" read -r -d$'\1' version title n < <(
        cat "$fp" | yq -r '[."prompt-version",.title,."n-test-runs"] | join("'$delim'")')

    version="$(printf -- "%s" "$version" | sed -z 's/^\n$//')"
    n="$(printf -- "%s" "$n" | sed -z 's/^\n$//')"
    : "${version:="0"}"
    : "${n:="5"}"

    slug="$(printf -- "%s\n" "$title" | tr '\n' ' ' | sed 's/ $//' | slugify)"
    nbn="${slug}-v${version}.jsonl"
    testfp="$MYGIT/semiosis/prompt-tests/results/$nbn"

    # if ! test "$UPDATE" = y; then
    #     test -f "$testfp" && continue
    # fi

    eval "set -- $(cat "$fp" | yq ".examples // empty | .[]" | s join ' ')"

    rm -f "$testfp"
    touch "$testfp"

    for (( i = 0; i < ${n}; i++ )); do
        
        IFS="$delim" read -r -d$'\1' RESULT < <(upd openai-complete "$fp" "$@")

        export RESULT
        export TITLE="$title"
        export VERSION="$version"

        jq -n -c '{ output: env.RESULT, title: env.TITLE, version: env.VERSION }' >> "$testfp"
        continue
    done

    (
        fn="$(basename "$fp")"
        mant="${fn%.*}"
        cd "$MYGIT/semiosis/prompt-tests/results-filename"

        rm -f "${mant}.jsonl"
        cp -af "../results/$nbn" "${mant}.jsonl"
    )
done

cd $MYGIT/semiosis/prompt-tests/
git add -A .
git commit -m "$(k f8)"
vc p